declare function add_into_A(): void;
declare function sub_into_A(): void;
declare function shlA_into_A(): void;
declare function shlB_into_A(): void;
declare function shrA_into_A(): void;
declare function shrB_into_A(): void;
declare function and_into_A(): void;
declare function or_into_A(): void;
declare function xor_into_A(): void;
declare function notA_into_A(): void;
declare function notB_into_A(): void;
declare function one_into_A(): void;
declare function zero_into_A(): void;
declare function incA_into_A(): void;
declare function decA_into_A(): void;
declare function add_into_B(): void;
declare function sub_into_B(): void;
declare function shlA_into_B(): void;
declare function shlB_into_B(): void;
declare function shrA_into_B(): void;
declare function shrB_into_B(): void;
declare function and_into_B(): void;
declare function or_into_B(): void;
declare function xor_into_B(): void;
declare function notA_into_B(): void;
declare function notB_into_B(): void;
declare function one_into_B(): void;
declare function zero_into_B(): void;
declare function incA_into_B(): void;
declare function decA_into_B(): void;
declare function constA(any): void;
declare function constB(any): void;
declare function loadA(any): void;
declare function loadB(any): void;
declare function storeA(any): void;
declare function storeB(any): void;
declare function page(any): void;
declare function loadAFar(any, any): void;
declare function loadBFar(any, any): void;
declare function storeAFar(any, any): void;
declare function storeBFar(any, any): void;
declare function jump(any): void;
declare function JZ(any): void;
declare function JNZ(any): void;
declare function JC(any): void;
declare function JNC(any): void;
declare function JNK(any): void;
declare function jumpFar(any, any): void;
declare function jumpA(): void;
declare function jumpABFar(): void;
declare function keyboardA(): void;
declare function storeKbdIncA(): void;
declare function output(any): void;
declare function outputA(): void;
declare function outputB(): void;
declare function BmovA(): void;
declare function AmovB(): void;
declare function AswapB(): void;
declare function AloadA(): void;
declare function AloadB(): void;
declare function BloadA(): void;
declare function BloadB(): void;
declare function AstoreB(): void;
declare function BstoreA(): void;
declare function iloadA(any): void;
declare function istoreA(any): void;
declare function iloadAFar(any, any): void;
declare function istoreAFar(any, any): void;
declare function pause(): void;
declare function debug(): void;
